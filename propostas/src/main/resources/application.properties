# Banco de dados
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5433/propostas
spring.datasource.username=propostas
spring.datasource.password=123
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop

#server.port=8081

#api analise financeira
analise-financeira.host=${ANALISE_FINANCEIRA_HOST:http://localhost:9999}
analise-financeira.analisa-proposta=${ANALISE_FINANCEIRA_ANALISA_PROPOSTA:/api/solicitacao}
#feign.client.br.com.zup.propostas.integrations.consultadadossolicitanteapi.loggerLevel = full

#api associa cartoes propostas
contas.host=${CONTAS_HOST:http://localhost:8888}
contas.associaCartao=${CONTAS_ASSOCIA_CARTAO:/api/cartoes}

#api bloqueia cartao
contas.bloqueiaCartao = ${CONTAS_BLOQUEIA_CARTAO:/api/cartoes/{id}/bloqueios}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}	

#prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

## Jaeger - Habilita ou não
#opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
## Jaeger - Nome do serviço
#opentracing.jaeger.service-name=${spring.application.name}
## Jaeger - Endereço para enviar os metadados (trace, span, etc)
#opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
## Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
#opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

#opentracing.spring.cloud.jdbc.enabled=false